from telethon import TelegramClient
from telethon.tl.functions.messages import SendMediaRequest
from telethon.tl.types import InputMediaUploadedPhoto
from telethon.tl.types import InputPeerChannel, InputSingleMedia
from telethon.tl.functions.messages import SendMultiMediaRequest, SendMessageRequest
import random
import os
from datetime import datetime, timedelta,timezone
import re
from telethon.tl.types import DocumentAttributeVideo

def get_pictures(folder_path):
    return sorted([
        os.path.join(folder_path, f)
        for f in os.listdir(folder_path)
        if os.path.isfile(os.path.join(folder_path, f))
    ])


async def schedule_posts(client, chat_info):

    VIDEO_ATTRS = [
        DocumentAttributeVideo(
            duration=0,  # –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç –¢–µ–ª–µ–≥—Ä–∞–º
            w=720,  # —à–∏—Ä–∏–Ω–∞
            h=1280,  # –≤—ã—Å–æ—Ç–∞
            supports_streaming=True
        )
    ]

    date_pattern = r'\b(0[1-9]|[12][0-9]|3[01])\.(0[1-9]|1[0-2])\b'
    time_pattern = r"\b\d{1,2}:\d{2}\b"

    # –¥–æ–±–∞–≤–ª—è–µ–º —Ç–∞–π–º–∑–æ–Ω—É (–ú–°–ö ‚Äî UTC+3)
    moscow_now = datetime.now().replace(tzinfo=timezone(timedelta(hours=3)))

    course_day, course_month = re.search(date_pattern, chat_info['title']).group().split('.')
    course_hour, course_minute = re.search(time_pattern, chat_info['title']).group().split(':')

    month_now = datetime.now().strftime('%m')
    day_now = datetime.now().strftime('%d')
    year_now = datetime.now().strftime('%Y')

    if month_now > course_month:
        course_year = int(year_now) + 1
    else:
        course_year = int(year_now)

    # –¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞. –ú–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è —Å—á–∏—Ç–∞–µ–º –∫–∞–∫ UTC + 3 —á–∞—Å–∞
    course_date = datetime(course_year, int(course_month), int(course_day), int(course_hour), int(course_minute)).replace(tzinfo=timezone(timedelta(hours=3)))

    # –¥–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏
    greeting_date = (course_date - timedelta(days=1))

    # –≥–æ—Ç–æ–≤–∏–º –ø–æ—Å—Ç-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ
    greeting_pictures = get_pictures('/Users/vadim/Documents/algoritmika/my_cards/')

    greeting_text = '''
    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏! 

–ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∞–¥–∏–º, —è –±—É–¥—É –≤–µ—Å—Ç–∏ –º–∏–Ω–∏-–∫—É—Ä—Å –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Pythonüëã –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –º–Ω–µ –º–æ–∂–µ—Ç–µ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö.

–ë–ª–∏–∂–∞–π—à–∏–µ —Ç—Ä–∏ –¥–Ω—è –º—ã –±—É–¥–µ–º —Å –≤–∞–º–∏ –º–Ω–æ–≥–æ –æ–±—â–∞—Ç—å—Å—è. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è —è –±—É–¥—É —Å–∫–∏–¥—ã–≤–∞—Ç—å —Å—é–¥–∞ –≤–∏–¥–µ–æ —Å —Ä–∞—Å—Å–∫–∞–∑–æ–º –æ–± –∏—Ç–æ–≥–∞—Ö —É—Ä–æ–∫–∞. –¢–∞–∫–∂–µ —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á—É –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –∫—É—Ä—Å–∞.

–ù–∞–ø–æ–º–Ω—é, —á—Ç–æ –≤–∞—à–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞ –ø–µ—Ä–≤–æ–º –∏ —Ç—Ä–µ—Ç—å–µ–º –∑–∞–Ω—è—Ç–∏—è—Ö. –¢–∞–∫ –∫–∞–∫ —è –±—É–¥—É –¥–∞–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤–∞—Å. –ö —Ç–æ–º—É –∂–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Å–≤–æ–∏—Ö –¥–µ—Ç–µ–π, –≤–µ–¥—å –Ω–æ–≤—ã–µ –Ω–µ–∑–Ω–∞–∫–æ–º—ã–µ –ª—é–¥–∏ ‚Äî —ç—Ç–æ –≤—Å–µ–≥–¥–∞ –≤–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ! 

–î–æ –≤—Å—Ç—Ä–µ—á–∏!
    '''

    # –ø–æ—Å—Ç-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –±—É–¥–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–æ–≤–Ω–æ –∑–∞ –¥–µ–Ω—å –¥–æ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–∫–∞. –ï—Å–ª–∏ —ç—Ç–æ –≤—Ä–µ–º—è –≤ –ø—Ä–æ—à–ª–æ–º, –ø–æ—Å—Ç –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è —Å—Ä–∞–∑—É
    await client.send_file(
        chat_info['id'],
        greeting_pictures,
        caption=greeting_text,
        schedule=greeting_date
    )


    # –ø–æ—Å—Ç —Å —á–µ–∫–ª–∏—Å—Ç–æ–º –≤ –ø–µ—Ä–≤—ã–π –¥–µ–Ω—å

    checklist_time = course_date - timedelta(minutes=30)
    checklist = '/Users/vadim/Documents/algoritmika/check-list.pdf'
    chek_text = f'''
    –í—Å–µ–º –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ –Ω–∞ –º–∏–Ω–∏-–∫—É—Ä—Å–µ –ø–æ Python üî•

–ñ–¥—É –≤–∞—Å –∏ –¥–µ—Ç–µ–π –Ω–∞ –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –≤ {course_date.hour}:{course_date.minute:02d} –º—Å–∫.

–ê –¥–æ –Ω–∞—á–∞–ª–∞ –∑–∞–Ω—è—Ç–∏—è –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –≤—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã! –ß—Ç–æ–±—ã –±—ã–ª–æ –ø—Ä–æ—â–µ, —Å–¥–µ–ª–∞–ª–∏ –¥–ª—è –≤–∞—Å —á–µ–∫-–ª–∏—Å—Ç üòâ –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –∑–∞–±—ã–ª–∏ ‚Äî –µ—â–µ –µ—Å—Ç—å –≤—Ä–µ–º—è –¥–æ–¥–µ–ª–∞—Ç—å üíú'''
    await client.send_file(
        chat_info['id'],
        checklist,
        caption=chek_text,
        schedule=checklist_time
    )

    # –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –¥–Ω—é 1
    feedback_1_date = (course_date + timedelta(days=1)).replace(hour=10, minute=0)
    video_1 = '/Users/vadim/Documents/algoritmika/video/python_day_1_test.mp4'


    feedback_1_text = '''
    –ï—â–µ —Ä–∞–∑ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–µ —Ä–æ–¥–∏—Ç–µ–ª–∏!

–í –≤–∏–¥–µ–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é, —á–µ–º –º—ã —Å —Ä–µ–±—è—Ç–∞–º–∏ –∑–∞–Ω–∏–º–∞–ª–∏—Å—å –Ω–∞ –ø–µ—Ä–≤–æ–º –∑–∞–Ω—è—Ç–∏–∏ –∏ —á–µ–º—É —É–∂–µ –Ω–∞—É—á–∏–ª–∏—Å—å üòä

–ï—Å–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∂–µ–ª–∞–Ω–∏—è, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ –ø–æ–≤–æ–¥—É –ø—Ä–æ—à–µ–¥—à–µ–≥–æ —É—Ä–æ–∫–∞, –ø–∏—à–∏—Ç–µ!'''

    await client.send_file(
        chat_info['id'],
        video_1,
        supports_streaming=True,
        video_note=False,
        caption=feedback_1_text,
        schedule=feedback_1_date,
        attributes=VIDEO_ATTRS,
    )

    # –ø–æ—Å—Ç —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –ø—Ä–æ Python –≤–æ –≤—Ç–æ—Ä–æ–π –¥–µ–Ω—å
    cards_date = (course_date + timedelta(days=1)) - timedelta(minutes=30)
    cards_pictures = get_pictures('/Users/vadim/Documents/algoritmika/python_img')
    cards_text = f'''
    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –°–µ–≥–æ–¥–Ω—è —Å–æ—Å—Ç–æ–∏—Ç—Å—è –≤—Ç–æ—Ä–æ–π —É—Ä–æ–∫ –º–∏–Ω–∏-–∫—É—Ä—Å–∞ üòé

–ü—Ä–µ–¥–ª–∞–≥–∞—é –≤–∞–º –ø–æ–±–æ–ª—å—à–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ —è–∑—ã–∫ Python. –¢–∞–∫ –≤—ã –±—É–¥–µ—Ç–µ –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å, —á–µ–º –∑–∞–Ω–∏–º–∞—é—Ç—Å—è —Ä–µ–±—è—Ç–∞ –Ω–∞ –∑–∞–Ω—è—Ç–∏—è—Ö. –ò –Ω–µ —Ä–∞—Å—Ç–µ—Ä—è–µ—Ç–µ—Å—å, –∫–æ–≥–¥–∞ –¥–µ—Ç–∏ –Ω–∞—á–Ω—É—Ç —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –≤–∞–º –ø—Ä–æ –∞–ª–≥–æ—Ä–∏—Ç–º—ã, –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ üòâ –ß–∏—Ç–∞–π—Ç–µ –ø—Ä–æ Python –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö.

–ï—Å–ª–∏ –≤–¥—Ä—É–≥ –∫—Ç–æ-—Ç–æ –∏–∑ –¥–µ—Ç–µ–π –ø—Ä–æ–ø—É—Å—Ç–∏–ª –ø–µ—Ä–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ, –º–æ–∂–Ω–æ —Å–µ–π—á–∞—Å –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—à–ª—ã–π —É—Ä–æ–∫ –Ω–∞ –æ–Ω–ª–∞–π–Ω-–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ.

–ñ–¥—É —Ä–µ–±—è—Ç –≤ {course_date.hour}:{course_date.minute:02d} –Ω–∞ –≤—Ç–æ—Ä–æ–º —É—Ä–æ–∫–µ!'''
    await client.send_file(
        chat_info['id'],
        cards_pictures,
        caption=cards_text,
        schedule=cards_date
    )

    # –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –¥–Ω—é 2
    feedback_2_date = (course_date + timedelta(days=2)).replace(hour=10, minute=0)
    video_2 = '/Users/vadim/Documents/algoritmika/video/python_day_2_test.mp4'

    feedback_2_text = '''
    –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –¥–æ—Ä–æ–≥–∏–µ —Ä–æ–¥–∏—Ç–µ–ª–∏!

–ü—Ä–æ–¥–æ–ª–∂–∞—é –¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –º–∏–Ω–∏-–∫—É—Ä—Å–µ. –û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∏–¥–µ–æ —Å —Ä–∞—Å—Å–∫–∞–∑–æ–º –æ —Ç–æ–º, —á–µ–º –º—ã –∑–∞–Ω–∏–º–∞–ª–∏—Å—å –Ω–∞ –≤—Ç–æ—Ä–æ–º —É—Ä–æ–∫–µ üòä'''

    await client.send_file(
        chat_info['id'],
        video_2,
        supports_streaming=True,
        video_note=False,
        caption=feedback_2_text,
        schedule=feedback_2_date,
        attributes=VIDEO_ATTRS,
    )

    # –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —Ç—Ä–µ—Ç–∏–π —É—Ä–æ–∫
    final_date = (course_date + timedelta(days=2)) - timedelta(hours=1)
    final_text = f'''
    –í—Å–µ–º –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!

–ß—Ç–æ –∂, –≤—ã—Ö–æ–¥–∏–º –Ω–∞ —Ñ–∏–Ω–∏—à–Ω—É—é –ø—Ä—è–º—É—é ‚Äî —Å–µ–≥–æ–¥–Ω—è –Ω–∞ –Ω–∞—à–µ–º –º–∏–Ω–∏-–∫—É—Ä—Å–µ –±—É–¥–µ—Ç –º–∏–Ω–∏-–≤—ã–ø—É—Å–∫–Ω–æ–π ü•≥

–î–µ—Ç–∏ –ø–æ–∫–∞–∂—É—Ç, —á–µ–º—É –Ω–∞—É—á–∏–ª–∏—Å—å –∑–∞ 3 —É—Ä–æ–∫–∞. –ú–Ω–µ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å, —á—Ç–æ–±—ã –æ–Ω–∏ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å —É—Å–ø–µ—Ö–∞–º–∏ –Ω–µ —Ç–æ–ª—å–∫–æ —Å–æ –º–Ω–æ–π, –Ω–æ –∏ —Å –≤–∞–º–∏. –ü–æ—ç—Ç–æ–º—É –ø—Ä–∏–≥–ª–∞—à–∞—é –≤–∞—Å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∑–∞–Ω—è—Ç–∏—é. –¢–∞–∫–∂–µ —è —Ä–∞—Å—Å–∫–∞–∂—É, —á—Ç–æ –¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫—É—Ä—Å–∞.

–ï—Å–ª–∏ –≤–¥—Ä—É–≥ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏–π—Ç–∏ –Ω–∞ –≤–µ—Å—å —É—Ä–æ–∫, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∑–∞ 10 –º–∏–Ω—É—Ç –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è.

–ù–∞—á–∏–Ω–∞–µ–º –≤ {course_date.hour}:{course_date.minute:02d} –ø–æ –ú–æ—Å–∫–≤–µüíú'''

    await client.send_message(
        chat_info['id'],
        message=final_text,
        schedule=final_date
    )

    # –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –¥–Ω—é 3
    feedback_3_date = (course_date + timedelta(days=3)).replace(hour=10, minute=0)
    video_3 = '/Users/vadim/Documents/algoritmika/video/python_day_3_test.mp4'

    feedback_3_text = '''
    –í–æ—Ç –∏ –ø–æ–¥–æ—à–µ–ª –∫ –∫–æ–Ω—Ü—É –Ω–∞—à –º–∏–Ω–∏-–∫—É—Ä—Å üòî 
 
–ß–µ—Å—Ç–Ω–æ, –±—ã–ª–æ –Ω–µ–º–Ω–æ–≥–æ –≥—Ä—É—Å—Ç–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ —Å –∏—Ç–æ–≥–∞–º–∏, –ø–æ—Ç–æ–º—É —á—Ç–æ –∂–∞–ª–∫–æ —Ä–∞—Å—Å—Ç–∞–≤–∞—Ç—å—Å—è —Å —Ä–µ–±—è—Ç–∞–º–∏!  –û—á–µ–Ω—å –Ω–∞–¥–µ—é—Å—å, —á—Ç–æ –≤–∞—à–∏ –¥–µ—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç –æ–±—É—á–µ–Ω–∏–µ –≤ –ê–ª–≥–æ—Ä–∏—Ç–º–∏–∫–µ, –∏ –º—ã –µ—â–µ –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –∏ —Å–¥–µ–ª–∞–µ–º –Ω–æ–≤—ã–µ –∫—Ä—É—Ç—ã–µ –ø—Ä–æ–µ–∫—Ç—ã üòä 
 
–ù–∞ –ø–æ–ª–Ω–æ–º –∫—É—Ä—Å–µ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python —Ä–µ–±—è—Ç–∞ —Å–æ–∑–¥–∞—é—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã, –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –±–æ—Ç–æ–≤ –∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∏. –ü–æ–¥—Ä–æ–±–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ —Ü–µ–Ω—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ. 
 
–í—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –º–∏–Ω–∏-–∫—É—Ä—Å–∞ —è –¥–∞—Ä—é —Å–∫–∏–¥–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –ø–æ–ª–Ω–æ–≥–æ –∫—É—Ä—Å–∞! –°–∫–∏–¥–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç 48 —á–∞—Å–æ–≤ —Å –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –º–æ–º–µ–Ω—Ç–∞. –£—Å–ø–µ–≤–∞–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è üòâ 
 
–¢–∞–∫–∂–µ –±—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ, –µ—Å–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏ –æ—Ç –∑–∞–Ω—è—Ç–∏–π üíú 
 
–î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!'''

    await client.send_file(
        chat_info['id'],
        video_3,
        supports_streaming=True,
        video_note=False,
        caption=feedback_3_text,
        schedule=feedback_3_date,
        attributes=VIDEO_ATTRS,
    )

    # –ø–æ—Å—Ç —Å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–µ–π
    checklist = '/Users/vadim/Documents/algoritmika/python_presentation.pdf'
    chek_text = f'''
    –§–∞–π–ª —Å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–µ–π –∏ —Ü–µ–Ω–∞–º–∏ ‚úçÔ∏è'''
    await client.send_file(
        chat_info['id'],
        file=checklist,
        caption=chek_text,
        schedule=feedback_3_date
    )